{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"body\");\n}","map":{"version":3,"names":["_createElementBlock"],"sources":["/home/ubuntu/development/code/Proyecto Chambeaya/src/views/ForgotPassView.vue"],"sourcesContent":["<template>\n<body>\n    \n</body>\n</template>\n\n<script>\nimport axios from 'axios'\nimport store from '@/store'\nimport { VueRecaptcha } from \"vue-recaptcha\";\nimport AvisoWindow from '@/components/AvisoWindow.vue'\nimport FooterComponent from '@/components/FooterComponent.vue';\nimport HeaderComponent from '@/components/HeaderComponent.vue'\n\n\nconst emailRegex = new RegExp(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\nconst HTTP_STATUS = {\n    OK: 200,\n    FORBIDDEN: 403,\n};\n\nexport default {\n\n    \n\n    data() {\n        return {\n            email: '',\n            msg: '',\n            destino: '',\n            errorText: ''\n        }\n    },\n    components: {\n    VueRecaptcha,\n    AvisoWindow,\n    FooterComponent,\n    HeaderComponent\n},\n    mounted() {\n        store.commit('setDestination', '/ui/results')\n    },\n    methods: {\n        enviar: function () {\n            if (!emailRegex.test(this.email)) {\n                this.errorText = \"Formato de correo inválido\"\n                this.$refs.message01.presenta()\n                return\n            }\n            axios.get(\"https://access.qbits.mx/api/forgot-password-request\", {\n                headers: { test: 'ok' },\n                params: { email: this.email }\n            })\n                .then(response => {\n                    response;\n                    store.commit('setDestination', '/ui/forgot-confirm')\n                    this.msg = 'Te hemos enviado un correo con un token de recuperación.'\n                    this.destino = '/ui/forgot-confirm'\n                    this.$refs.avisoWindow.openModal()\n                })\n                .catch(error => {\n                    error;\n                    this.msg = error.response\n                    this.destino = ''\n                    this.$refs.avisoWindow.openModal()\n                })\n        },\n        onCaptchaVerified(recaptchaToken) {\n            this.captcha = false;\n            axios.post(\"https://access.qbits.mx/api/check-captcha\", {\n                response: recaptchaToken,\n                ip: \"127.0.0.1\",\n            }).then((response) => {\n                if (response.status === HTTP_STATUS.OK) {\n                    this.captcha = true;\n                } else {\n                    this.msgErr = \"Regreso con un estatus: \" + response.status;\n                }\n            }).catch((error) => {\n                console.log(error.data);\n                this.msgErr = \"Ha ocurrido un error de red: \" + error;\n            }).finally(() => (console.log('this.loading = false')));\n        },\n        onCaptchaExpired() {\n            this.captcha = false;\n            this.$refs.recaptcha.reset();\n        },\n    }\n}\n</script>\n\n<style scoped>\n.ancho {\n    max-width: 600px;\n    margin: auto;\n    margin-top: 100px;\n}\n</style>"],"mappings":";;uBACAA,mBAAA,CAEO"},"metadata":{},"sourceType":"module","externalDependencies":[]}