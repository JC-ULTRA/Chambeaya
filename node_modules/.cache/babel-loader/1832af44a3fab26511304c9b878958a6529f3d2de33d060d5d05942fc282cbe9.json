{"ast":null,"code":"import axios from 'axios';\nimport Footer2Component from '@/components/Footer2Component.vue';\nimport store from '@/store';\nexport default {\n  components: {\n    Footer2Component\n  },\n  data() {\n    return {\n      imagenes: []\n    };\n  },\n  mounted() {\n    this.obtenerImagenes();\n  },\n  methods: {\n    obtenerImagenes() {\n      axios.get('https://upload.qbits.mx/api/up/get-user-all-images/51').then(response => {\n        this.imagenes = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    getImagenUrl(fullHttpUploadUrl) {\n      return `https://media.visitanos.net/image${fullHttpUploadUrl}`;\n    },\n    loggear: function () {\n      const url = \"https://access.qbits.mx/api/login\";\n      axios.post(url, {\n        'cred': 'Zonik011#',\n        'hash': 0,\n        'user': 'remep28446@mitigado.com'\n      }, {\n        headers: {\n          'accept': 'application/json;charset=utf-8',\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        store.commit('setUserData', response.data);\n        console.log(store.state.userData.idUser);\n        console.log(store.state.userData.jwt);\n      });\n    },\n    eliminarImagen: function (idImagen) {\n      // Verificar si se ha proporcionado el id de la imagen\n      if (!idImagen) {\n        console.log(\"El id de la imagen no se ha proporcionado\");\n        return;\n      }\n\n      // Pedir confirmación al usuario antes de eliminar la imagen\n      if (!confirm(\"¿Seguro que quieres eliminar esta imagen?\")) {\n        return;\n      }\n\n      // Obtener el token JWT del estado de Vuex\n      const tokenJWT = this.$store.state.userData.jwt;\n\n      // Crear la URL de la API que borra la imagen\n      const url = `https://example.com/api/up/delete-media/${idImagen}`;\n\n      // Enviar la solicitud de eliminación al servidor\n      axios.delete(url, {\n        headers: {\n          Authorization: `Bearer ${tokenJWT}`\n        }\n      }).then(response => {\n        console.log(response.data);\n        console.log(\"Imagen eliminada exitosamente\");\n      }).catch(error => {\n        // Manejar errores específicos de HTTP\n        if (error.response) {\n          console.log(`Error al eliminar la imagen: ${error.response.status} - ${error.response.statusText}`);\n        } else {\n          console.log(\"Error al eliminar la imagen:\", error.message);\n        }\n        // Mostrar un mensaje de error al usuario\n        alert(\"Error al eliminar la imagen. Por favor, inténtalo de nuevo más tarde.\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","Footer2Component","store","components","data","imagenes","mounted","obtenerImagenes","methods","get","then","response","catch","error","console","log","getImagenUrl","fullHttpUploadUrl","loggear","url","post","headers","commit","state","userData","idUser","jwt","eliminarImagen","idImagen","confirm","tokenJWT","$store","delete","Authorization","status","statusText","message","alert"],"sources":["/home/ubuntu/development/code/practica-vue/src/views/EditImagesView.vue"],"sourcesContent":["<template>\n    <nav class=\"navbar navbar-dark bg-dark\">\n        <div class=\"container-fluid\">\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n        </div>\n    </nav>\n    <div class=\"fondo\">\n        <div class=\"pt-4\">\n            <h1>IMAGES</h1>\n        </div>\n        <div class=\"p-4\">\n            <div class=\"row gap-3\">\n                <div class=\"col col-auto px-0\" v-for=\"imagen in imagenes\" :key=\"imagen.id\">\n                    <div class=\"card colorcard\">\n                        <div class=\"position-relative\">\n                            <img class=\"card-img-top p-2 imagen\" :src=\"getImagenUrl(imagen.fullHttpUploadUrl)\" alt=\"Imagen\">\n                            <button class=\"btn btn-primary align-baseline d-inline\" v-on:click=\"loggear\">\n        Login <i class=\"bi bi-box-arrow-in-down\"></i>\n    </button>\n    <button class=\"btn btn-danger align-baseline d-inline\" v-on:click=\"eliminarImagen(imagen.id)\"></button>\n                        </div>\n                        <div class=\"card-body\" style=\"text-align: center;\">\n                            <p class=\"card-title usuario\">User: {{ imagen.idUsuario }}</p>\n                            <p class=\"card-text name\">Name: {{ imagen.nombreOriginal }}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <Footer2Component />\n</template>\n\n<script>\nimport axios from 'axios';\nimport Footer2Component from '@/components/Footer2Component.vue';\nimport store from '@/store';\n\nexport default {\n    components: {\n        Footer2Component,\n    },\n    data() {\n        return {\n            imagenes: []\n        }\n    },\n    mounted() {\n        this.obtenerImagenes();\n    },\n    methods: {\n        obtenerImagenes() {\n            axios.get('https://upload.qbits.mx/api/up/get-user-all-images/51')\n                .then(response => {\n                    this.imagenes = response.data;\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        },\n        getImagenUrl(fullHttpUploadUrl) {\n            return `https://media.visitanos.net/image${fullHttpUploadUrl}`;\n        },\n        loggear: function() {\n            const url = \"https://access.qbits.mx/api/login\"\n            axios\n                .post(url,\n                {\n                    'cred': 'Zonik011#',\n                    'hash': 0,\n                    'user': 'remep28446@mitigado.com'\n                },\n                {\n                    headers: {\n                    'accept': 'application/json;charset=utf-8',\n                    'Content-Type': 'application/json'\n                    }\n                }\n                )       \n                .then((response) => {\n                    store.commit('setUserData', response.data)\n                    console.log(store.state.userData.idUser)\n                    console.log(store.state.userData.jwt)\n                })\n        },\n        eliminarImagen: function(idImagen) {\n    // Verificar si se ha proporcionado el id de la imagen\n    if (!idImagen) {\n        console.log(\"El id de la imagen no se ha proporcionado\")\n        return\n    }\n\n    // Pedir confirmación al usuario antes de eliminar la imagen\n    if (!confirm(\"¿Seguro que quieres eliminar esta imagen?\")) {\n        return\n    }\n\n    // Obtener el token JWT del estado de Vuex\n    const tokenJWT = this.$store.state.userData.jwt\n\n    // Crear la URL de la API que borra la imagen\n    const url = `https://example.com/api/up/delete-media/${idImagen}`\n\n    // Enviar la solicitud de eliminación al servidor\n    axios.delete(url, {\n        headers: {\n            Authorization: `Bearer ${tokenJWT}`\n        }\n    })\n    .then(response => {\n        console.log(response.data)\n        console.log(\"Imagen eliminada exitosamente\")\n    })\n    .catch((error) => {\n        // Manejar errores específicos de HTTP\n        if (error.response) {\n            console.log(`Error al eliminar la imagen: ${error.response.status} - ${error.response.statusText}`)\n        } else {\n            console.log(\"Error al eliminar la imagen:\", error.message)\n        }\n        // Mostrar un mensaje de error al usuario\n        alert(\"Error al eliminar la imagen. Por favor, inténtalo de nuevo más tarde.\")\n    })\n}\n}\n}\n</script> \n\n<style>\n.fondo {\n    background: #288BA8;\n    padding: 20px;\n}\n\n.colorcard {\n    background: rgba(65, 65, 248, 0.164);\n}\n\n.boton {\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    border-radius: 50%;\n    border: 2px solid red;\n    color: red;\n}\n\n.imagen {\n    border-radius: 20px;\n    border: none;\n    max-width: 200px;\n    max-height: 200px;\n    object-fit: cover;\n}\n\n.usuario {\n    color: blueviolet;\n    font-family: Georgia, 'Times New Roman', Times, serif;\n    font-size: 12px;\n}\n\n.name {\n    color: black;\n    font-size: 12px;\n}\n</style>"],"mappings":"AAoCA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,gBAAe,MAAO,mCAAmC;AAChE,OAAOC,KAAI,MAAO,SAAS;AAE3B,eAAe;EACXC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,eAAe,EAAE;EAC1B,CAAC;EACDC,OAAO,EAAE;IACLD,eAAeA,CAAA,EAAG;MACdP,KAAK,CAACS,GAAG,CAAC,uDAAuD,EAC5DC,IAAI,CAACC,QAAO,IAAK;QACd,IAAI,CAACN,QAAO,GAAIM,QAAQ,CAACP,IAAI;MACjC,CAAC,EACAQ,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB,CAAC,CAAC;IACV,CAAC;IACDG,YAAYA,CAACC,iBAAiB,EAAE;MAC5B,OAAQ,oCAAmCA,iBAAkB,EAAC;IAClE,CAAC;IACDC,OAAO,EAAE,SAAAA,CAAA,EAAW;MAChB,MAAMC,GAAE,GAAI,mCAAkC;MAC9CnB,KAAI,CACCoB,IAAI,CAACD,GAAG,EACT;QACI,MAAM,EAAE,WAAW;QACnB,MAAM,EAAE,CAAC;QACT,MAAM,EAAE;MACZ,CAAC,EACD;QACIE,OAAO,EAAE;UACT,QAAQ,EAAE,gCAAgC;UAC1C,cAAc,EAAE;QAChB;MACJ,EACA,CACCX,IAAI,CAAEC,QAAQ,IAAK;QAChBT,KAAK,CAACoB,MAAM,CAAC,aAAa,EAAEX,QAAQ,CAACP,IAAI;QACzCU,OAAO,CAACC,GAAG,CAACb,KAAK,CAACqB,KAAK,CAACC,QAAQ,CAACC,MAAM;QACvCX,OAAO,CAACC,GAAG,CAACb,KAAK,CAACqB,KAAK,CAACC,QAAQ,CAACE,GAAG;MACxC,CAAC;IACT,CAAC;IACDC,cAAc,EAAE,SAAAA,CAASC,QAAQ,EAAE;MACvC;MACA,IAAI,CAACA,QAAQ,EAAE;QACXd,OAAO,CAACC,GAAG,CAAC,2CAA2C;QACvD;MACJ;;MAEA;MACA,IAAI,CAACc,OAAO,CAAC,2CAA2C,CAAC,EAAE;QACvD;MACJ;;MAEA;MACA,MAAMC,QAAO,GAAI,IAAI,CAACC,MAAM,CAACR,KAAK,CAACC,QAAQ,CAACE,GAAE;;MAE9C;MACA,MAAMP,GAAE,GAAK,2CAA0CS,QAAS;;MAEhE;MACA5B,KAAK,CAACgC,MAAM,CAACb,GAAG,EAAE;QACdE,OAAO,EAAE;UACLY,aAAa,EAAG,UAASH,QAAS;QACtC;MACJ,CAAC,EACApB,IAAI,CAACC,QAAO,IAAK;QACdG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACP,IAAI;QACzBU,OAAO,CAACC,GAAG,CAAC,+BAA+B;MAC/C,CAAC,EACAH,KAAK,CAAEC,KAAK,IAAK;QACd;QACA,IAAIA,KAAK,CAACF,QAAQ,EAAE;UAChBG,OAAO,CAACC,GAAG,CAAE,gCAA+BF,KAAK,CAACF,QAAQ,CAACuB,MAAM,MAAMrB,KAAK,CAACF,QAAQ,CAACwB,UAAW,EAAC;QACtG,OAAO;UACHrB,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,KAAK,CAACuB,OAAO;QAC7D;QACA;QACAC,KAAK,CAAC,uEAAuE;MACjF,CAAC;IACL;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}