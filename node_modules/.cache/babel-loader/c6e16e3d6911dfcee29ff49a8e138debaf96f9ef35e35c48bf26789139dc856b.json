{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport store from '@/store';\nimport axios from 'axios';\nimport ForbiddenView from '@/views/ForbiddenView';\nimport ForgotPassView from '@/views/ForgotPassView';\nimport ForgotConfirmView from '@/views/ForgotConfirmView';\nimport LoginView from '@/views/LoginView';\nimport OfficialDocUpLoad from '@/views/OfficialDocUpLoadView';\nimport PaymentMethodsView from '@/views/PaymentMethodsView';\nimport GeneralDataView from '@/views/GeneralDataView';\nimport PostAdView from '@/views/PostAdView';\nconst routes = [{\n  path: '/ui/payment',\n  name: 'payment',\n  component: PaymentMethodsView\n}, {\n  path: '/ui/general-data',\n  name: 'general-data',\n  component: GeneralDataView\n}, {\n  path: '/ui/official-doc',\n  name: 'official-doc',\n  component: OfficialDocUpLoad\n}, {\n  path: '/ui/post',\n  name: 'post',\n  component: PostAdView\n}, {\n  path: '/ui/login',\n  name: 'login',\n  component: LoginView\n}, {\n  path: '/ui/forgot',\n  name: 'forgot',\n  component: ForgotConfirmView\n}, {\n  path: '/ui/forgot-pas',\n  name: 'forgot-pas',\n  component: ForgotPassView\n}, {\n  path: '/ui/post',\n  name: 'post',\n  component: ForbiddenView\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  scrollBehavior: () => ({\n    y: 0\n  }),\n  routes\n});\nfunction parseJwt(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n  return JSON.parse(jsonPayload);\n}\nfunction checaJwt() {\n  //  var jwt = store.getters.getjwt;\n  var jwt = store.state.userData.jwt;\n  if (jwt && jwt !== undefined && jwt.length > 0) {\n    const jwtPayload = parseJwt(jwt);\n    //jwtPayload.exp=1625505833-28*60;\n    let now = new Date();\n    let limite = new Date(jwtPayload.creation);\n    limite.setMinutes(limite.getMinutes() + 30);\n    if (now > limite) {\n      store.commit('setUserData', {\n        userData: {\n          idUser: 0,\n          nick: 'cyz',\n          email: '',\n          role: '',\n          lastSuccesfullAccess: '',\n          jwt: '',\n          //  jwt='' => signed: false,\n          usuarioDetalle: null\n        }\n      });\n      store.commit('setDestination', '/');\n    } else {\n      //const timeToExpire =  jwtPayload.exp - (Date.now()/1000);\n      //console.log('Tiempo para que expire:' + timeToExpire);\n    }\n  }\n}\nrouter.beforeEach((to, from, next) => {\n  axios.defaults.headers.common = {\n    \"X-CSRFToken\": store.state.userData.jwt\n  };\n  axios.defaults.headers.common = {\n    \"jwt\": store.state.userData.jwt\n  };\n  checaJwt();\n  //TODO: VALIDAR  EL JWT porque no tiene el valor de expire\n  if (to.matched.some(record => record.meta.allowedRoles)) {\n    // *** El recurso SI requiere autenticación ya que pide ciertos roles\n    // NO estás autenticado actualmente:\n    if (store.state.userData.jwt === '' || store.state.userData.jwt == undefined) {\n      store.commit('setDestination', to.fullPath);\n      router.push(\"/ui/login\");\n      return;\n    }\n    // SI estoy autenticado actualmente, asi que solo voy a checar si mi rol es el adecuado:              \n    if (to.matched.some(ok => !ok.meta.allowedRoles.includes(store.state.userData.role))) {\n      router.push('/ui/forbidden'); // no tengo el rol asociado a esa interfaz\n      return;\n    }\n  }\n  next(); // *** El recurso NO requiere autenticación\n});\n\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","store","axios","ForbiddenView","ForgotPassView","ForgotConfirmView","LoginView","OfficialDocUpLoad","PaymentMethodsView","GeneralDataView","PostAdView","routes","path","name","component","router","history","scrollBehavior","y","parseJwt","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","checaJwt","jwt","state","userData","undefined","length","jwtPayload","now","Date","limite","creation","setMinutes","getMinutes","commit","idUser","nick","email","role","lastSuccesfullAccess","usuarioDetalle","beforeEach","to","from","next","defaults","headers","common","matched","some","record","meta","allowedRoles","fullPath","push","ok","includes"],"sources":["/home/ubuntu/development/code/Proyecto Chambeaya/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport store from '@/store'\nimport axios from 'axios';\nimport ForbiddenView from '@/views/ForbiddenView'\nimport ForgotPassView from '@/views/ForgotPassView'\nimport ForgotConfirmView from '@/views/ForgotConfirmView'\nimport LoginView from '@/views/LoginView'\nimport OfficialDocUpLoad from '@/views/OfficialDocUpLoadView'\nimport PaymentMethodsView from '@/views/PaymentMethodsView'\nimport GeneralDataView from '@/views/GeneralDataView'\nimport PostAdView from '@/views/PostAdView'\n\nconst routes = [\n\n  {\n    path: '/ui/payment',\n    name: 'payment',\n    component: PaymentMethodsView\n  },\n  {\n    path: '/ui/general-data',\n    name: 'general-data',\n    component: GeneralDataView\n  },\n  {\n    path: '/ui/official-doc',\n    name: 'official-doc',\n    component: OfficialDocUpLoad\n  },\n  {\n    path: '/ui/post',\n    name: 'post',\n    component: PostAdView\n  },\n  {\n    path: '/ui/login',\n    name: 'login',\n    component: LoginView\n  },\n  {\n    path: '/ui/forgot',\n    name: 'forgot',\n    component: ForgotConfirmView\n  },\n  {\n    path: '/ui/forgot-pas',\n    name: 'forgot-pas',\n    component: ForgotPassView\n  },\n  {\n    path: '/ui/post',\n    name: 'post',\n    component: ForbiddenView\n  },\n]\n\nconst router = createRouter({\n  history: createWebHistory(),\n  scrollBehavior: () => ({ y: 0 }),\n  routes\n})\n\nfunction parseJwt(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n  return JSON.parse(jsonPayload);\n}\n\nfunction checaJwt() {\n//  var jwt = store.getters.getjwt;\n  var jwt = store.state.userData.jwt;\n  if (jwt && jwt !== undefined && jwt.length > 0) {\n      const jwtPayload = parseJwt(jwt);\n      //jwtPayload.exp=1625505833-28*60;\n      let now = new Date();\n      let limite = new Date (jwtPayload.creation);\n      limite.setMinutes(limite.getMinutes() + 30);\n      if (now> limite) {\n          store.commit('setUserData', {\n              userData: {\n                idUser: 0,\n                nick: 'cyz',\n                email: '',\n                role: '',\n                lastSuccesfullAccess: '',\n                jwt: '', //  jwt='' => signed: false,\n                usuarioDetalle: null,\n            },\n          });\n          store.commit('setDestination', '/');\n      } else {\n          //const timeToExpire =  jwtPayload.exp - (Date.now()/1000);\n          //console.log('Tiempo para que expire:' + timeToExpire);\n      }\n  }\n}\n\nrouter.beforeEach((to, from, next) => {\n  axios.defaults.headers.common = {\"X-CSRFToken\": store.state.userData.jwt};\n  axios.defaults.headers.common = {\"jwt\": store.state.userData.jwt};\n  checaJwt();\n  //TODO: VALIDAR  EL JWT porque no tiene el valor de expire\n  if (to.matched.some(record => record.meta.allowedRoles )) { // *** El recurso SI requiere autenticación ya que pide ciertos roles\n    // NO estás autenticado actualmente:\n    if (store.state.userData.jwt===''|| store.state.userData.jwt == undefined) {      \n      store.commit('setDestination', to.fullPath);\n      router.push(\"/ui/login\");\n      return;\n    }\n    // SI estoy autenticado actualmente, asi que solo voy a checar si mi rol es el adecuado:              \n    if(to.matched.some(ok => !ok.meta.allowedRoles.includes(store.state.userData.role))) {\n      router.push('/ui/forbidden'); // no tengo el rol asociado a esa interfaz\n      return;\n    }\n  }\n  next(); // *** El recurso NO requiere autenticación\n})\n\nexport default router\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}