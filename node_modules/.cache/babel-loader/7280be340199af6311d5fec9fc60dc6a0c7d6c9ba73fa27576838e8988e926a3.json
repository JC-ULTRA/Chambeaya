{"ast":null,"code":"import { createStore } from 'vuex';\nimport createPersistedState from \"vuex-persistedstate\";\nconst store = createStore({\n  state: {\n    toggleFooter: true,\n    toggleHeader: true,\n    toggleSidebar: true,\n    destination: '/',\n    nombreCompleto: '',\n    userData: {\n      idUser: 0,\n      nick: 'cyz',\n      email: '',\n      role: '',\n      lastSuccesfullAccess: '',\n      jwt: '',\n      //  jwt='' => signed: false,\n      usuarioDetalle: null,\n      jwt2: 'goose'\n    },\n    errorMsg: ''\n  },\n  getters: {\n    getJwt2(state) {\n      return state.userData.jwt2;\n    },\n    getjwt2(state) {\n      return state.userData.jwt2;\n    }\n  },\n  mutations: {\n    setJwt2(state, jwt2) {\n      state.userData.jwt2 = jwt2;\n    },\n    setUserData(state, data) {\n      state.userData = data;\n      state.userData.role = data.role != undefined ? data.role.toLowerCase() : '';\n    },\n    setDestination(state, destination) {\n      state.destination = destination;\n    },\n    setNombreCompleto(state, nombreCompleto) {\n      state.nombreCompleto = nombreCompleto;\n    },\n    eliminarImagen(state, id) {\n      const imgIndex = state.userData.usuarioDetalle.findIndex(img => img.id === id);\n      if (imgIndex !== -1) {\n        state.userData.usuarioDetalle.splice(imgIndex, 1);\n      }\n    },\n    deleteAllImages(state) {\n      state.userData.usuarioDetalle = [];\n    },\n    deleteUserData(state) {\n      state.userData = {\n        idUser: 0,\n        nick: 'cyz',\n        email: '',\n        role: '',\n        lastSuccesfullAccess: '',\n        jwt: '',\n        usuarioDetalle: null,\n        jwt2: 'goose'\n      };\n    }\n  },\n  actions: {\n    async eliminarImagen({\n      commit,\n      state\n    }, id) {\n      try {\n        const response = await fetch(`https://upload.qbits.mx/api/up/delete-media/${id}`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n            'idUser': state.userData.idUser,\n            'jwt': state.userData.jwt\n          }\n        });\n        if (response.ok) {\n          commit('eliminarImagen', id);\n        } else {\n          console.log('Failed to delete image');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n  plugins: [createPersistedState()]\n});\nexport default store;","map":{"version":3,"names":["createStore","createPersistedState","store","state","toggleFooter","toggleHeader","toggleSidebar","destination","nombreCompleto","userData","idUser","nick","email","role","lastSuccesfullAccess","jwt","usuarioDetalle","jwt2","errorMsg","getters","getJwt2","getjwt2","mutations","setJwt2","setUserData","data","undefined","toLowerCase","setDestination","setNombreCompleto","eliminarImagen","id","imgIndex","findIndex","img","splice","deleteAllImages","deleteUserData","actions","commit","response","fetch","method","headers","ok","console","log","error","plugins"],"sources":["/home/ubuntu/development/code/practica-vue/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport createPersistedState from \"vuex-persistedstate\"\n\nconst store = createStore({\n  state: {\n    toggleFooter: true,\n    toggleHeader: true,\n    toggleSidebar: true,\n    destination: '/',\n    nombreCompleto: '',\n    userData: {\n        idUser: 0,\n        nick: 'cyz',\n        email: '',\n        role: '',\n        lastSuccesfullAccess: '',\n        jwt: '', //  jwt='' => signed: false,\n        usuarioDetalle: null,\n        jwt2: 'goose'\n    },\n    errorMsg: ''    \n  },\n  getters: {\n    getJwt2 (state) {\n      return state.userData.jwt2\n    },    \n    getjwt2(state){\n      return state.userData.jwt2\n    }\n  },\n  mutations: {\n    setJwt2(state, jwt2) {\n      state.userData.jwt2 = jwt2;\n    },\n    setUserData(state, data) {        \n        state.userData = data;\n        state.userData.role =  data.role != undefined ? data.role.toLowerCase():'';        \n    },\n    setDestination(state, destination) {\n        state.destination = destination;\n    },\n    setNombreCompleto(state, nombreCompleto) {\n        state.nombreCompleto = nombreCompleto;\n    },\n    eliminarImagen(state, id) {\n        const imgIndex = state.userData.usuarioDetalle.findIndex(img => img.id === id);\n        if (imgIndex !== -1) {\n            state.userData.usuarioDetalle.splice(imgIndex, 1);\n        }\n    },\n    deleteAllImages(state) {\n        state.userData.usuarioDetalle = [];\n    },\n    deleteUserData(state) {\n        state.userData = {\n            idUser: 0,\n            nick: 'cyz',\n            email: '',\n            role: '',\n            lastSuccesfullAccess: '',\n            jwt: '',\n            usuarioDetalle: null,\n            jwt2: 'goose'\n        };\n    }\n  },\n  actions: {\n    async eliminarImagen({ commit, state }, id) {\n      try {\n        const response = await fetch(`https://upload.qbits.mx/api/up/delete-media/${id}`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n            'idUser': state.userData.idUser,\n            'jwt': state.userData.jwt\n          }\n        });\n        if (response.ok) {\n          commit('eliminarImagen', id);\n        } else {\n          console.log('Failed to delete image');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n  plugins: [createPersistedState()]\n});\n\nexport default store;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}