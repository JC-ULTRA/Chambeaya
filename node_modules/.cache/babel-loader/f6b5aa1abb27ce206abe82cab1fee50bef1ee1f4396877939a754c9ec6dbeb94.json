{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"width\": \"70%\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.imgs, (elemento, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass($options.selecciona(index)),\n      key: index\n    }, [_createElementVNode(\"h1\", null, _toDisplayString(elemento), 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["style","_createElementBlock","_hoisted_1","_Fragment","_renderList","$props","imgs","elemento","index","class","_normalizeClass","$options","selecciona","key","_createElementVNode","_toDisplayString"],"sources":["/home/ubuntu/development/code/practica-vue/src/components/CarouselComponent.vue"],"sourcesContent":["<template>\n    <div style=\"width: 70%;\">\n        <div :class=selecciona(index) v-for=\"(elemento,index) in imgs\" v-bind:key=\"index\">\n            <h1>{{ elemento }}</h1>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: ['imgs', 'ruta'],\n    methods: {\n        selecciona: function (index) {\n            return (index == 0) ? this.caruselActivo : this.caruselInactivo\n        }\n    },\n    data() {\n        return {\n            caruselActivo: \"carousel-item active\",\n            caruselInactivo: \"carousel-item\",\n        }\n    }\n}\n</script>\n\n\n<style></style>"],"mappings":";;EACSA,KAAmB,EAAnB;IAAA;EAAA;AAAmB;;uBAAxBC,mBAAA,CAIM,OAJNC,UAIM,I,kBAHFD,mBAAA,CAEME,SAAA,QAAAC,WAAA,CAFmDC,MAAA,CAAAC,IAAI,GAAvBC,QAAQ,EAACC,KAAK;yBAApDP,mBAAA,CAEM;MAFAQ,KAAK,EAAAC,eAAA,CAACC,QAAA,CAAAC,UAAU,CAACJ,KAAK;MAA0CK,GAAG,EAAEL;QACvEM,mBAAA,CAAuB,YAAAC,gBAAA,CAAhBR,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}