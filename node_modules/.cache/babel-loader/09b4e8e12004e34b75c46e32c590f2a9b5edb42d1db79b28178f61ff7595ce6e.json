{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-03589122\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"main\", {\n  class: \"container pt-5 hoja\"\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderComponent = _resolveComponent(\"HeaderComponent\");\n  const _component_FooterComponent = _resolveComponent(\"FooterComponent\");\n  return _openBlock(), _createElementBlock(\"body\", null, [_createElementVNode(\"div\", null, [_createVNode(_component_HeaderComponent), _hoisted_1, _createVNode(_component_FooterComponent, {\n    class: \"down\"\n  })])]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_createVNode","_component_HeaderComponent","_hoisted_1","_component_FooterComponent"],"sources":["/home/ubuntu/development/code/Proyecto Chambeaya/src/views/RegisterView.vue"],"sourcesContent":["<template>\n<body>\n  <div>\n      <HeaderComponent />\n      <main class=\"container pt-5 hoja\">\n        \n      </main>\n    <FooterComponent class=\"down\" />\n    </div>\n</body>\n</template>\n  \n<script>\n    import { VueRecaptcha } from \"vue-recaptcha\";\n    import { useToast } from \"vue-toastification\";\n    import router from '../router'\n    import axios from 'axios'\n    import FooterComponent from \"@/components/FooterComponent.vue\";\n    import HeaderComponent from \"@/components/HeaderComponent.vue\";\n\n    const nickRegex = new RegExp(/^\\w+$/);\n    const emailRegex = new RegExp(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\n    const HTTP_STATUS = {\n        OK: 200,\n        FORBIDDEN: 403,\n    };\n\n    export default {\n        setup() {\n          // Get toast interface\n          const toast = useToast();\n          // Make it available inside methods\n          return { toast };\n        },\n        data() {\n          return {\n            incorrecto: true,\n\n            correo: '',\n            msgCorreo: '',\n            nick: '',\n            msgNick: '',\n            password: '',\n            msgPassword: '',\n            version: process.env.VUE_APP_VERSION,\n\n            msgErr: '',\n            captcha: false,\n            checkRules: [(v) => !!v || ''],\n            pwVisible: false,\n            pwInputValue : 'password',\n          }\n        },\n        computed : {\n          habilitaBoton(){\n            return !this.captcha || this.msgCorreo.length>0 || this.msgNick.length>0 || this.msgPassword.length>0\n          },\n        },\n        watch: {\n          password(value) {\n            this.msgPassword =\"\"\n            if(value.length < 8) {\n              this.msgPassword='La clave debe tener 8 caracteres o mas'\n            }\n            if(value.length > 24) {\n              this.msgPassword='La clave debe tener 24 caracteres o menos'\n            }\n            if((value.replace(/[*a-z]/g, \"\")) == value) {\n              this.msgPassword='La cadena debe posser al menos una minúscula'\n            }\n            if((value.replace(/[*A-Z]/g, \"\")) == value) {\n              this.msgPassword='La cadena debe posser al menos una mayúscula'\n            }\n            if((value.replace(/[*0-9]/g, \"\")) == value) {\n              this.msgPassword='La cadena debe posser al menos un número'\n            }\n            if((value.replace(/[&\\\\#, +(\\-\\\\_)$~%.'\":*?<>{}]/g, \"\")) == value) {\n              this.msgPassword='La cadena debe posser al menos un símbolo'\n            }\n            this.habilitaSend()\n          },\n          correo() { \n            this.msgCorreo=\"\";\n            if(!emailRegex.test(this.correo)) {\n              this.msgCorreo=\"Formato de correo inválido\"\n            }\n            if(this.correo.length<7) { // a@x.com\n              this.msgCorreo=\"Longitud inválida de correo (mínimo 7 caracters)\"\n            }\n            if(this.correo.length>30) {\n              this.msgCorreo=\"Longitud inválida de correo (máximo 30 caracters)\"\n            }\n            this.habilitaSend();\n          },\n          nick() { \n            this.msgNick=\"\";\n            if(this.nick.length<4 || this.nick.length>16 || !nickRegex.test(this.nick)) {\n              this.msgNick=\"Emplear entre 4 y 16 caracters alfanuméricos\"\n            }\n            this.habilitaSend();\n          },\n          captcha() {\n            this.habilitaSend();\n          }\n        },\n        components: {\n          VueRecaptcha,\n          HeaderComponent,\n          FooterComponent,\n        },\n        methods: {\n          habilitaSend() {\n            var err = this.msgPassword.length>0 || this.msgCorreo.length>0 || this.msgNick.length>0\n            var empty = this.password.length<1 && this.nick.length<1 && this.correo.length<1\n            var other = this.captcha && this.correo.length<30 && emailRegex.test(this.correo)\n            this.incorrecto = empty  || err || !other;\n          },\n          oculta () {\n            this.pwVisible = !this.pwVisible;\n            this.pwInputValue = (this.pwVisible) ? \"text\" : \"password\";\n          },\n          errorAlert(error) {\n            this.toast.error(error, {\n              position: \"bottom-right\",\n              timeout: 5000,\n              closeOnClick: true,\n              pauseOnFocusLoss: true,\n              pauseOnHover: true,\n              draggable: true,\n              draggablePercent: 0.6,\n              showCloseButtonOnHover: false,\n              hideProgressBar: false,\n              closeButton: \"button\",\n              icon: true,\n              rtl: false,\n            });\n          },\n          register() {\n            axios.post(\"https://access.qbits.mx/api/register-request\", {\n              correo: this.correo,\n              nick: this.nick,\n              claveHash: this.password,\n            })\n            .then((response) => {\n              console.log(response.data)\n              router.push(\"/ui/registerconfirm\");\n            })\n            .catch((error) => {\n                if (error.response) {            \n                  this.errorAlert(error.response)\n                }           \n            });\n          },\n          openLoginPage() {\n            router.push('/ui/login').catch(()=>{});\n          },\n          onCaptchaVerified(recaptchaToken) {\n            this.captcha = false;\n            axios.post(\"https://access.qbits.mx/api/check-captcha\", {\n                response: recaptchaToken,\n                ip: \"127.0.0.1\",\n            }).then((response) => {\n                if (response.status === HTTP_STATUS.OK) {\n                    this.captcha = true;\n                } else {\n                    this.msgErr = \"Regreso con un estatus: \" + response.status;\n                }\n            }).catch((error) => {\n                console.log(error.data);\n                this.msgErr = \"Ha ocurrido un error de red: \" + error;\n            }).finally(() => (console.log('this.loading = false')));\n          },\n          onCaptchaExpired() {\n                this.captcha = false;\n                this.$refs.recaptcha.reset();\n          },          \n        }, \n    }\n</script>\n  \n<style scoped>\n\nbody {\n  background-image: url('../assets/oficios.jpg');\n  background-size: cover;\n  position: relative;\n}\n  .a3 {\n    color: #fff;\n    text-align: right;\n    text-decoration: none;\n  }\n\n  .a3:hover {\n    color: #fff;\n  }\n  .ancho {\n    max-width: 360px;\n  }\n\n  .centra {\n    margin: auto;\n    padding-top: 10%;\n  }\n\n  .form-control:focus {\n    box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(168, 161, 161, 0.58);\n  }\n\n\n\n  .icon-email {\n    padding-left: 30px;\n    background: url(\"@/assets/email.png\") no-repeat left;\n    background-size: 14px;\n    background-position: 2%50%;\n  }\n\n  .icon-user {\n    padding-left: 30px;\n    background: url(\"@/assets/user.png\") no-repeat left;\n    background-size: 14px;\n    background-position: 2%50%;\n  }\n\n  .icon-lock {\n    padding-left: 30px;\n    background: url(\"@/assets/lock.png\") no-repeat left;\n    background-size: 14px;\n    background-position: 2%50%;\n  }\n\n  .notValid {\n    color: #ff0000;\n    text-align: right;\n  }\n\n  .fondo {\n    position: absolute;\n    background-size: cover;\n    background-position: center center;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n    background-color: #fff;\n  }\n\n  .card {\n    background-color: transparent;\n  }\n\n\n  small, label {\n    color:#fff;\n  }\n</style>\n\n"],"mappings":";;gEAIMA,mBAAA,CAEO;EAFDC,KAAK,EAAC;AAAqB;;;;;uBAHvCC,mBAAA,CAQO,eAPLF,mBAAA,CAMQ,cALJG,YAAA,CAAmBC,0BAAA,GACnBC,UAEO,EACTF,YAAA,CAAgCG,0BAAA;IAAfL,KAAK,EAAC;EAAM,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}